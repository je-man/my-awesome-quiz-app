{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/question-form/question-form.component.ts","./src/app/question-form/question-form.component.html","./src/app/questions.service.ts","./src/app/questions/questions.component.ts","./src/app/questions/questions.component.html","./src/app/quiz.model.ts","./src/app/results/results.component.ts","./src/app/results/results.component.html","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '<router-outlet></router-outlet>',\n})\nexport class AppComponent {}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { AppComponent } from './app.component';\nimport { QuestionFormComponent } from './question-form/question-form.component';\nimport { ResultsComponent } from './results/results.component';\n\nimport { RouterModule, Routes } from '@angular/router';\nimport { QuestionsComponent } from './questions/questions.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nconst appRoutes: Routes = [\n  { path: 'welcome', component: WelcomeComponent },\n  { path: ':quizId', component: QuestionsComponent },\n  { path: '', redirectTo: 'welcome', pathMatch: 'prefix' },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuestionFormComponent,\n    ResultsComponent,\n    QuestionsComponent,\n    WelcomeComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(appRoutes),\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatButtonModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Question } from '../quiz.model';\n\n@Component({\n  selector: 'app-question-form',\n  templateUrl: './question-form.component.html',\n  styleUrls: ['./question-form.component.scss'],\n})\nexport class QuestionFormComponent implements OnInit {\n  @Input() question: Question;\n  @Output() onChoiceMade = new EventEmitter<string>();\n\n  form: FormGroup;\n\n  ngOnInit() {\n    this.form = new FormGroup({\n      choice: new FormControl(),\n    });\n\n    this.form.valueChanges.subscribe(this.onChange);\n  }\n\n  onChange = () => {\n    this.onChoiceMade.emit(this.form.value.choice);\n  };\n}\n","<div class=\"quiz\" *ngIf=\"question\">\n  <h2 class=\"title\">{{question.label}}</h2>\n  <form [formGroup]=\"form\">\n    <mat-card-content class=\"form-group mat-app-background\">\n      <label *ngFor=\"let choice of question.choices\">\n        <input type=\"radio\" [value]=\"choice\" formControlName=\"choice\">\n        <ul>\n          <li><span>{{choice.value}}</span></li>\n        </ul>\n\n      </label>\n    </mat-card-content>\n  </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Quiz, Question } from './quiz.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuestionsService {\n  constructor(private http: HttpClient) {}\n\n  public getQuizzes() {\n    return this.http.get(`./assets/quiz-list.json`).pipe(\n      map((result: any[]) => {\n        return result.map(\n          (r) => new Quiz(r.label, r.name, r.description, r.fileName)\n        );\n      })\n    );\n  }\n\n  public getQuestions(fileName: string) {\n    return this.http.get(`./assets/${fileName}.json`).pipe(\n      map((result: any[]) => {\n        return result.map((r) => new Question(r.label, r.choices));\n      })\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { switchMap } from 'rxjs/operators';\n\nimport { QuestionsService } from '../questions.service';\nimport { Quiz, Answers, Choice, Question } from '../quiz.model';\n\n@Component({\n  selector: 'app-questions',\n  templateUrl: './questions.component.html',\n  styleUrls: ['./questions.component.sass'],\n})\nexport class QuestionsComponent implements OnInit {\n  quiz: Quiz;\n  answers: Answers;\n  questions: Question[];\n  currentQuestionIndex: number;\n\n  showResults = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    public questionsService: QuestionsService\n  ) {}\n\n  ngOnInit() {\n    // read from the dynamic route and load the proper quiz data\n    this.questionsService\n      .getQuestions(this.route.snapshot.params.quizId)\n      .subscribe((questions) => {\n        // initialize everything\n        this.questions = questions;\n        this.answers = new Answers();\n        this.currentQuestionIndex = 0;\n      });\n  }\n\n  updateChoice(choice: Choice) {\n    this.answers.values[this.currentQuestionIndex] = choice;\n  }\n\n  nextOrViewResults() {\n    if (this.currentQuestionIndex === this.questions.length - 1) {\n      this.showResults = true;\n      return;\n    }\n\n    this.currentQuestionIndex++;\n  }\n\n  reset() {\n    this.quiz = undefined;\n    this.questions = undefined;\n    this.answers = undefined;\n    this.currentQuestionIndex = undefined;\n  }\n}\n","<div *ngIf=\"quiz && !questions\" class=\"spinner-grow text-primary\"></div>\n<mat-card *ngIf=\"questions\">\n  <div class=\"questions\" *ngIf=\"!showResults\">\n    <app-question-form\n      [question]=\"questions[currentQuestionIndex]\"\n      (onChoiceMade)=\"updateChoice($event)\"\n    >\n    </app-question-form>\n    <mat-card-actions>\n      <button\n        mat-raised-button\n        color=\"accent\"\n        class=\"btn btn-primary\"\n        (click)=\"nextOrViewResults()\"\n        [disabled]=\"!answers.values[currentQuestionIndex]\"\n      >\n        {{\n          currentQuestionIndex === questions.length - 1\n            ? \"View results\"\n            : \"Next\"\n        }}\n      </button>\n    </mat-card-actions>\n  </div>\n\n  <app-results *ngIf=\"showResults\" [answers]=\"answers\"></app-results>\n</mat-card>\n","export class Choice {\n  constructor(public value: string, public correct?: boolean) {}\n}\n\nexport class Question {\n  constructor(public label: string, public choices: Choice[]) {}\n}\n\nexport class Quiz {\n  constructor(\n    public label: string,\n    public name: string,\n    public description: string,\n    public fileName: string\n  ) {}\n}\n\nexport class Answers {\n  constructor(public values: Choice[] = []) {}\n}\n","import { Component, Input } from '@angular/core';\nimport { Answers } from '../quiz.model';\n\n@Component({\n  selector: 'app-results',\n  templateUrl: './results.component.html',\n  styleUrls: ['./results.component.sass'],\n})\nexport class ResultsComponent {\n  @Input() answers: Answers;\n}\n","<mat-card>\n  <mat-card-title class=\"title\">Results</mat-card-title>\n  <mat-card-content class=\"answer mat-app-background\" *ngFor=\"let a of\n    answers.values\" [ngClass]=\"{correct: a.correct}\">\n    {{a.value}}\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-raised-button color=\"accent\" class=\"btn btn-primary\">\n      <a routerLink=\"/welcome\" class=\"btn btn-primary\">Choose another quiz</a>\n    </button>\n  </mat-card-actions>\n</mat-card>\n\n\n<!-- <div class=\"results\">\n  <h2>Results</h2>\n  <div class=\"answer\" *ngFor=\"let a of answers.values\" [ngClass]=\"{correct: a.correct}\">\n    {{a.value}}\n  </div>\n</div> -->","import { Component, OnInit } from '@angular/core';\nimport { QuestionsService } from '../questions.service';\nimport { Quiz } from '../quiz.model';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css'],\n})\nexport class WelcomeComponent implements OnInit {\n  quiz: Quiz[];\n\n  constructor(public questionsService: QuestionsService) {}\n\n  ngOnInit() {\n    this.questionsService.getQuizzes().subscribe((quiz) => {\n      this.quiz = quiz;\n    });\n  }\n\n  reset() {\n    this.quiz = undefined;\n  }\n}\n","<!-- <p>Welcome to my awesome quiz app!</p> -->\n\n<div>\n  <mat-card color=\"primary\">\n    <mat-card-title class=\"title\"> Quizzes</mat-card-title>\n  </mat-card>\n  <div *ngFor=\"let q of quiz\">\n    <mat-card>\n      <mat-card-title>{{q.label}}</mat-card-title>\n      <mat-card-subtitle>{{q.description}}</mat-card-subtitle>\n      <mat-card-actions>\n        <button mat-raised-button color=\"accent\" class=\"btn btn-primary\">\n          <a routerLink=\"/{{q.name}}\" class=\"btn btn-primary\">Select this quiz</a>\n        </button>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}